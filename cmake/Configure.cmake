if(TRANSPARENT_PF AND APPLE)
  message(STATUS "Downloading the essential Darwin-XNU header files")
  execute_process(COMMAND sw_vers --productVersion OUTPUT_VARIABLE macos_ver)
  if(macos_ver VERSION_GREATER_EQUAL 15.1)
    set(xnu_ver "11215.41.3")
  elseif(macos_ver VERSION_GREATER_EQUAL 15.0)
    set(xnu_ver "11215.1.10")
  elseif(macos_ver VERSION_GREATER_EQUAL 14.6)
    set(xnu_ver "10063.141.1")
  elseif(macos_ver VERSION_GREATER_EQUAL 14.5)
    set(xnu_ver "10063.121.3")
  elseif(macos_ver VERSION_GREATER_EQUAL 14.4)
    set(xnu_ver "10063.101.15")
  elseif(macos_ver VERSION_GREATER_EQUAL 14.3)
    set(xnu_ver "10002.81.5")
  elseif(macos_ver VERSION_GREATER_EQUAL 14.2)
    set(xnu_ver "10002.61.3")
  elseif(macos_ver VERSION_GREATER_EQUAL 14.1)
    set(xnu_ver "10002.41.9")
  elseif(macos_ver VERSION_GREATER_EQUAL 14.0)
    set(xnu_ver "10002.1.13")
  elseif(macos_ver VERSION_GREATER_EQUAL 13.5)
    set(xnu_ver "8796.141.3")
  elseif(macos_ver VERSION_GREATER_EQUAL 13.4)
    set(xnu_ver "8796.121.2")
  elseif(macos_ver VERSION_GREATER_EQUAL 13.3)
    set(xnu_ver "8796.101.5")
  elseif(macos_ver VERSION_GREATER_EQUAL 13.2)
    set(xnu_ver "8792.81.2")
  elseif(macos_ver VERSION_GREATER_EQUAL 13.1)
    set(xnu_ver "8792.61.2")
  elseif(macos_ver VERSION_GREATER_EQUAL 13.0)
    set(xnu_ver "8792.41.9")
  elseif(macos_ver VERSION_GREATER_EQUAL 12.5)
    set(xnu_ver "8020.140.41")
  elseif(macos_ver VERSION_GREATER_EQUAL 12.4)
    set(xnu_ver "8020.121.3")
  elseif(macos_ver VERSION_GREATER_EQUAL 12.3)
    set(xnu_ver "8020.101.4")
  elseif(macos_ver VERSION_GREATER_EQUAL 12.2)
    set(xnu_ver "8019.80.24")
  elseif(macos_ver VERSION_GREATER_EQUAL 12.1)
    set(xnu_ver "8019.61.5")
  else()
    set(xnu_ver "8019.41.5")
  endif()
  file(DOWNLOAD
    "https://raw.githubusercontent.com/apple-oss-distributions/xnu/refs/tags/xnu-${xnu_ver}/libkern/libkern/tree.h"
    "${CMAKE_BINARY_DIR}/include/libkern/tree.h")
  file(DOWNLOAD
    "https://raw.githubusercontent.com/apple-oss-distributions/xnu/refs/tags/xnu-${xnu_ver}/bsd/net/pfvar.h"
    "${CMAKE_BINARY_DIR}/include/net/pfvar.h")
  file(DOWNLOAD
    "https://raw.githubusercontent.com/apple-oss-distributions/xnu/refs/tags/xnu-${xnu_ver}/bsd/net/radix.h"
    "${CMAKE_BINARY_DIR}/include/net/radix.h")
  message(STATUS "Downloading the essential Darwin-XNU header files -- done")
endif()

# Generating config.hpp
message(STATUS "Generating config.hpp")

if(Sodium_VERSION_STRING VERSION_GREATER_EQUAL "1.0.17")
  # From libsodium 1.0.17, the declarations of crypto_stream_xxx functions contain
  # '__attribute__ ((nonnull))', which might let GCC cause '-Wignored-attributes' warning
  # if using std::is_same to detect function signature equation.
  set(DISABLE_GCC_IGNORED_ATTRIBUTES ON)
endif()

if(${CMAKE_CXX_COMPILER_ID} STREQUAL "AppleClang" OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
  # https://reviews.llvm.org/D119670?id=408276
  include(CheckCXXCompilerFlag)
  check_cxx_compiler_flag("-Wno-unqualified-std-cast-call" DISABLE_CLANG_UNQUALIFIED_STD_CAST_CALL)
endif()

if(BUILD_SERVER)
  include(CheckIncludeFiles)
  include(CheckFunctionExists)
  check_include_files("unistd.h" HAS_UNISTD_H)
  check_include_files("signal.h" HAS_SIGNAL_H)
  check_include_files("pwd.h" HAS_PWD_H)
  check_include_files("grp.h" HAS_GRP_H)
  check_function_exists("getpwnam" HAS_GETPWNAM)
  check_function_exists("setuid" HAS_SETUID)
  check_function_exists("getgrnam" HAS_GETGRNAM)
  check_function_exists("setgid" HAS_SETGID)
  check_function_exists("fork" HAS_FORK)
  check_function_exists("setsid" HAS_SETSID)
  check_function_exists("close" HAS_CLOSE)
  check_function_exists("strerror_s" HAS_STRERROR_S)
  check_function_exists("strerror_r" HAS_STRERROR_R)
endif()

configure_file(${CMAKE_SOURCE_DIR}/include/pichi/common/config.hpp.in
  ${CMAKE_BINARY_DIR}/include/pichi/common/config.hpp)

message(STATUS "Generating config.hpp - done")
